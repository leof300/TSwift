// Code generated from TSParser_rules.g4 by ANTLR 4.13.0. DO NOT EDIT.

package TSVisitor

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type TSParser_rulesLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var TSParser_rulesLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func tsparser_ruleslexerLexerInit() {
	staticData := &TSParser_rulesLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'%'", "'*'", "'/'", "'+'", "'-'", "'('", "')'", "'='", "", "",
		"'var'", "'let'", "'nil'", "'String'", "'Int'", "'Float'", "'Bool'",
		"'Character'", "'if'", "'else'", "'switch'", "'default'", "'case'",
		"'while'", "'in'", "'for'", "'guard'", "'continue'", "'break'", "'return'",
		"'struct'", "'self'", "'mutating'", "'func'", "'inout'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "NL", "WS", "VAR", "LET", "NIL",
		"STRING", "INT", "FLOAT", "BOOL", "CHARACTER", "IF", "ELSE", "SWITCH",
		"DEFAULT", "CASE", "WHILE", "IN", "FOR", "GUARD", "CONTINUE", "BREAK",
		"RETURN", "STRUCT", "SELF", "MUTATING", "FUNC", "INOUT", "VBOOL", "VSTRING",
		"VFLOAT", "VINTEGER", "ID", "SL_COMMENT", "ML_COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "NL",
		"WS", "VAR", "LET", "NIL", "STRING", "INT", "FLOAT", "BOOL", "CHARACTER",
		"IF", "ELSE", "SWITCH", "DEFAULT", "CASE", "WHILE", "IN", "FOR", "GUARD",
		"CONTINUE", "BREAK", "RETURN", "STRUCT", "SELF", "MUTATING", "FUNC",
		"INOUT", "DIGIT", "VBOOL", "VSTRING", "VFLOAT", "VINTEGER", "ID", "SL_COMMENT",
		"ML_COMMENT", "ESC",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 42, 345, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1,
		3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 3, 8, 107,
		8, 8, 1, 8, 1, 8, 1, 9, 4, 9, 112, 8, 9, 11, 9, 12, 9, 113, 1, 9, 1, 9,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1,
		23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25,
		1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1,
		27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28,
		1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1,
		30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1,
		33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35,
		1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 3, 36, 274,
		8, 36, 1, 37, 1, 37, 1, 37, 5, 37, 279, 8, 37, 10, 37, 12, 37, 282, 9,
		37, 1, 37, 1, 37, 1, 38, 4, 38, 287, 8, 38, 11, 38, 12, 38, 288, 1, 38,
		1, 38, 4, 38, 293, 8, 38, 11, 38, 12, 38, 294, 1, 39, 4, 39, 298, 8, 39,
		11, 39, 12, 39, 299, 1, 40, 1, 40, 5, 40, 304, 8, 40, 10, 40, 12, 40, 307,
		9, 40, 1, 41, 1, 41, 1, 41, 1, 41, 5, 41, 313, 8, 41, 10, 41, 12, 41, 316,
		9, 41, 1, 41, 5, 41, 319, 8, 41, 10, 41, 12, 41, 322, 9, 41, 1, 41, 1,
		41, 1, 42, 1, 42, 1, 42, 1, 42, 5, 42, 330, 8, 42, 10, 42, 12, 42, 333,
		9, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 3,
		43, 344, 8, 43, 3, 280, 314, 331, 0, 44, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5,
		11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29,
		15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47,
		24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65,
		33, 67, 34, 69, 35, 71, 0, 73, 36, 75, 37, 77, 38, 79, 39, 81, 40, 83,
		41, 85, 42, 87, 0, 1, 0, 5, 2, 0, 9, 9, 32, 32, 1, 0, 48, 57, 3, 0, 65,
		90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 10, 10,
		13, 13, 355, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7,
		1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0,
		15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0,
		0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0,
		0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0,
		0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1,
		0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53,
		1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0,
		61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0,
		0, 69, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0,
		0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0,
		0, 0, 1, 89, 1, 0, 0, 0, 3, 91, 1, 0, 0, 0, 5, 93, 1, 0, 0, 0, 7, 95, 1,
		0, 0, 0, 9, 97, 1, 0, 0, 0, 11, 99, 1, 0, 0, 0, 13, 101, 1, 0, 0, 0, 15,
		103, 1, 0, 0, 0, 17, 106, 1, 0, 0, 0, 19, 111, 1, 0, 0, 0, 21, 117, 1,
		0, 0, 0, 23, 121, 1, 0, 0, 0, 25, 125, 1, 0, 0, 0, 27, 129, 1, 0, 0, 0,
		29, 136, 1, 0, 0, 0, 31, 140, 1, 0, 0, 0, 33, 146, 1, 0, 0, 0, 35, 151,
		1, 0, 0, 0, 37, 161, 1, 0, 0, 0, 39, 164, 1, 0, 0, 0, 41, 169, 1, 0, 0,
		0, 43, 176, 1, 0, 0, 0, 45, 184, 1, 0, 0, 0, 47, 189, 1, 0, 0, 0, 49, 195,
		1, 0, 0, 0, 51, 198, 1, 0, 0, 0, 53, 202, 1, 0, 0, 0, 55, 208, 1, 0, 0,
		0, 57, 217, 1, 0, 0, 0, 59, 223, 1, 0, 0, 0, 61, 230, 1, 0, 0, 0, 63, 237,
		1, 0, 0, 0, 65, 242, 1, 0, 0, 0, 67, 251, 1, 0, 0, 0, 69, 256, 1, 0, 0,
		0, 71, 262, 1, 0, 0, 0, 73, 273, 1, 0, 0, 0, 75, 275, 1, 0, 0, 0, 77, 286,
		1, 0, 0, 0, 79, 297, 1, 0, 0, 0, 81, 301, 1, 0, 0, 0, 83, 308, 1, 0, 0,
		0, 85, 325, 1, 0, 0, 0, 87, 343, 1, 0, 0, 0, 89, 90, 5, 37, 0, 0, 90, 2,
		1, 0, 0, 0, 91, 92, 5, 42, 0, 0, 92, 4, 1, 0, 0, 0, 93, 94, 5, 47, 0, 0,
		94, 6, 1, 0, 0, 0, 95, 96, 5, 43, 0, 0, 96, 8, 1, 0, 0, 0, 97, 98, 5, 45,
		0, 0, 98, 10, 1, 0, 0, 0, 99, 100, 5, 40, 0, 0, 100, 12, 1, 0, 0, 0, 101,
		102, 5, 41, 0, 0, 102, 14, 1, 0, 0, 0, 103, 104, 5, 61, 0, 0, 104, 16,
		1, 0, 0, 0, 105, 107, 5, 13, 0, 0, 106, 105, 1, 0, 0, 0, 106, 107, 1, 0,
		0, 0, 107, 108, 1, 0, 0, 0, 108, 109, 5, 10, 0, 0, 109, 18, 1, 0, 0, 0,
		110, 112, 7, 0, 0, 0, 111, 110, 1, 0, 0, 0, 112, 113, 1, 0, 0, 0, 113,
		111, 1, 0, 0, 0, 113, 114, 1, 0, 0, 0, 114, 115, 1, 0, 0, 0, 115, 116,
		6, 9, 0, 0, 116, 20, 1, 0, 0, 0, 117, 118, 5, 118, 0, 0, 118, 119, 5, 97,
		0, 0, 119, 120, 5, 114, 0, 0, 120, 22, 1, 0, 0, 0, 121, 122, 5, 108, 0,
		0, 122, 123, 5, 101, 0, 0, 123, 124, 5, 116, 0, 0, 124, 24, 1, 0, 0, 0,
		125, 126, 5, 110, 0, 0, 126, 127, 5, 105, 0, 0, 127, 128, 5, 108, 0, 0,
		128, 26, 1, 0, 0, 0, 129, 130, 5, 83, 0, 0, 130, 131, 5, 116, 0, 0, 131,
		132, 5, 114, 0, 0, 132, 133, 5, 105, 0, 0, 133, 134, 5, 110, 0, 0, 134,
		135, 5, 103, 0, 0, 135, 28, 1, 0, 0, 0, 136, 137, 5, 73, 0, 0, 137, 138,
		5, 110, 0, 0, 138, 139, 5, 116, 0, 0, 139, 30, 1, 0, 0, 0, 140, 141, 5,
		70, 0, 0, 141, 142, 5, 108, 0, 0, 142, 143, 5, 111, 0, 0, 143, 144, 5,
		97, 0, 0, 144, 145, 5, 116, 0, 0, 145, 32, 1, 0, 0, 0, 146, 147, 5, 66,
		0, 0, 147, 148, 5, 111, 0, 0, 148, 149, 5, 111, 0, 0, 149, 150, 5, 108,
		0, 0, 150, 34, 1, 0, 0, 0, 151, 152, 5, 67, 0, 0, 152, 153, 5, 104, 0,
		0, 153, 154, 5, 97, 0, 0, 154, 155, 5, 114, 0, 0, 155, 156, 5, 97, 0, 0,
		156, 157, 5, 99, 0, 0, 157, 158, 5, 116, 0, 0, 158, 159, 5, 101, 0, 0,
		159, 160, 5, 114, 0, 0, 160, 36, 1, 0, 0, 0, 161, 162, 5, 105, 0, 0, 162,
		163, 5, 102, 0, 0, 163, 38, 1, 0, 0, 0, 164, 165, 5, 101, 0, 0, 165, 166,
		5, 108, 0, 0, 166, 167, 5, 115, 0, 0, 167, 168, 5, 101, 0, 0, 168, 40,
		1, 0, 0, 0, 169, 170, 5, 115, 0, 0, 170, 171, 5, 119, 0, 0, 171, 172, 5,
		105, 0, 0, 172, 173, 5, 116, 0, 0, 173, 174, 5, 99, 0, 0, 174, 175, 5,
		104, 0, 0, 175, 42, 1, 0, 0, 0, 176, 177, 5, 100, 0, 0, 177, 178, 5, 101,
		0, 0, 178, 179, 5, 102, 0, 0, 179, 180, 5, 97, 0, 0, 180, 181, 5, 117,
		0, 0, 181, 182, 5, 108, 0, 0, 182, 183, 5, 116, 0, 0, 183, 44, 1, 0, 0,
		0, 184, 185, 5, 99, 0, 0, 185, 186, 5, 97, 0, 0, 186, 187, 5, 115, 0, 0,
		187, 188, 5, 101, 0, 0, 188, 46, 1, 0, 0, 0, 189, 190, 5, 119, 0, 0, 190,
		191, 5, 104, 0, 0, 191, 192, 5, 105, 0, 0, 192, 193, 5, 108, 0, 0, 193,
		194, 5, 101, 0, 0, 194, 48, 1, 0, 0, 0, 195, 196, 5, 105, 0, 0, 196, 197,
		5, 110, 0, 0, 197, 50, 1, 0, 0, 0, 198, 199, 5, 102, 0, 0, 199, 200, 5,
		111, 0, 0, 200, 201, 5, 114, 0, 0, 201, 52, 1, 0, 0, 0, 202, 203, 5, 103,
		0, 0, 203, 204, 5, 117, 0, 0, 204, 205, 5, 97, 0, 0, 205, 206, 5, 114,
		0, 0, 206, 207, 5, 100, 0, 0, 207, 54, 1, 0, 0, 0, 208, 209, 5, 99, 0,
		0, 209, 210, 5, 111, 0, 0, 210, 211, 5, 110, 0, 0, 211, 212, 5, 116, 0,
		0, 212, 213, 5, 105, 0, 0, 213, 214, 5, 110, 0, 0, 214, 215, 5, 117, 0,
		0, 215, 216, 5, 101, 0, 0, 216, 56, 1, 0, 0, 0, 217, 218, 5, 98, 0, 0,
		218, 219, 5, 114, 0, 0, 219, 220, 5, 101, 0, 0, 220, 221, 5, 97, 0, 0,
		221, 222, 5, 107, 0, 0, 222, 58, 1, 0, 0, 0, 223, 224, 5, 114, 0, 0, 224,
		225, 5, 101, 0, 0, 225, 226, 5, 116, 0, 0, 226, 227, 5, 117, 0, 0, 227,
		228, 5, 114, 0, 0, 228, 229, 5, 110, 0, 0, 229, 60, 1, 0, 0, 0, 230, 231,
		5, 115, 0, 0, 231, 232, 5, 116, 0, 0, 232, 233, 5, 114, 0, 0, 233, 234,
		5, 117, 0, 0, 234, 235, 5, 99, 0, 0, 235, 236, 5, 116, 0, 0, 236, 62, 1,
		0, 0, 0, 237, 238, 5, 115, 0, 0, 238, 239, 5, 101, 0, 0, 239, 240, 5, 108,
		0, 0, 240, 241, 5, 102, 0, 0, 241, 64, 1, 0, 0, 0, 242, 243, 5, 109, 0,
		0, 243, 244, 5, 117, 0, 0, 244, 245, 5, 116, 0, 0, 245, 246, 5, 97, 0,
		0, 246, 247, 5, 116, 0, 0, 247, 248, 5, 105, 0, 0, 248, 249, 5, 110, 0,
		0, 249, 250, 5, 103, 0, 0, 250, 66, 1, 0, 0, 0, 251, 252, 5, 102, 0, 0,
		252, 253, 5, 117, 0, 0, 253, 254, 5, 110, 0, 0, 254, 255, 5, 99, 0, 0,
		255, 68, 1, 0, 0, 0, 256, 257, 5, 105, 0, 0, 257, 258, 5, 110, 0, 0, 258,
		259, 5, 111, 0, 0, 259, 260, 5, 117, 0, 0, 260, 261, 5, 116, 0, 0, 261,
		70, 1, 0, 0, 0, 262, 263, 7, 1, 0, 0, 263, 72, 1, 0, 0, 0, 264, 265, 5,
		116, 0, 0, 265, 266, 5, 114, 0, 0, 266, 267, 5, 117, 0, 0, 267, 274, 5,
		101, 0, 0, 268, 269, 5, 102, 0, 0, 269, 270, 5, 97, 0, 0, 270, 271, 5,
		108, 0, 0, 271, 272, 5, 115, 0, 0, 272, 274, 5, 101, 0, 0, 273, 264, 1,
		0, 0, 0, 273, 268, 1, 0, 0, 0, 274, 74, 1, 0, 0, 0, 275, 280, 5, 34, 0,
		0, 276, 279, 3, 87, 43, 0, 277, 279, 9, 0, 0, 0, 278, 276, 1, 0, 0, 0,
		278, 277, 1, 0, 0, 0, 279, 282, 1, 0, 0, 0, 280, 281, 1, 0, 0, 0, 280,
		278, 1, 0, 0, 0, 281, 283, 1, 0, 0, 0, 282, 280, 1, 0, 0, 0, 283, 284,
		5, 34, 0, 0, 284, 76, 1, 0, 0, 0, 285, 287, 7, 1, 0, 0, 286, 285, 1, 0,
		0, 0, 287, 288, 1, 0, 0, 0, 288, 286, 1, 0, 0, 0, 288, 289, 1, 0, 0, 0,
		289, 290, 1, 0, 0, 0, 290, 292, 5, 46, 0, 0, 291, 293, 7, 1, 0, 0, 292,
		291, 1, 0, 0, 0, 293, 294, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0, 294, 295,
		1, 0, 0, 0, 295, 78, 1, 0, 0, 0, 296, 298, 7, 1, 0, 0, 297, 296, 1, 0,
		0, 0, 298, 299, 1, 0, 0, 0, 299, 297, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0,
		300, 80, 1, 0, 0, 0, 301, 305, 7, 2, 0, 0, 302, 304, 7, 3, 0, 0, 303, 302,
		1, 0, 0, 0, 304, 307, 1, 0, 0, 0, 305, 303, 1, 0, 0, 0, 305, 306, 1, 0,
		0, 0, 306, 82, 1, 0, 0, 0, 307, 305, 1, 0, 0, 0, 308, 309, 5, 47, 0, 0,
		309, 310, 5, 47, 0, 0, 310, 314, 1, 0, 0, 0, 311, 313, 9, 0, 0, 0, 312,
		311, 1, 0, 0, 0, 313, 316, 1, 0, 0, 0, 314, 315, 1, 0, 0, 0, 314, 312,
		1, 0, 0, 0, 315, 320, 1, 0, 0, 0, 316, 314, 1, 0, 0, 0, 317, 319, 8, 4,
		0, 0, 318, 317, 1, 0, 0, 0, 319, 322, 1, 0, 0, 0, 320, 318, 1, 0, 0, 0,
		320, 321, 1, 0, 0, 0, 321, 323, 1, 0, 0, 0, 322, 320, 1, 0, 0, 0, 323,
		324, 6, 41, 0, 0, 324, 84, 1, 0, 0, 0, 325, 326, 5, 47, 0, 0, 326, 327,
		5, 42, 0, 0, 327, 331, 1, 0, 0, 0, 328, 330, 9, 0, 0, 0, 329, 328, 1, 0,
		0, 0, 330, 333, 1, 0, 0, 0, 331, 332, 1, 0, 0, 0, 331, 329, 1, 0, 0, 0,
		332, 334, 1, 0, 0, 0, 333, 331, 1, 0, 0, 0, 334, 335, 5, 42, 0, 0, 335,
		336, 5, 47, 0, 0, 336, 337, 1, 0, 0, 0, 337, 338, 6, 42, 0, 0, 338, 86,
		1, 0, 0, 0, 339, 340, 5, 92, 0, 0, 340, 344, 5, 34, 0, 0, 341, 342, 5,
		92, 0, 0, 342, 344, 5, 92, 0, 0, 343, 339, 1, 0, 0, 0, 343, 341, 1, 0,
		0, 0, 344, 88, 1, 0, 0, 0, 14, 0, 106, 113, 273, 278, 280, 288, 294, 299,
		305, 314, 320, 331, 343, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// TSParser_rulesLexerInit initializes any static state used to implement TSParser_rulesLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewTSParser_rulesLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func TSParser_rulesLexerInit() {
	staticData := &TSParser_rulesLexerLexerStaticData
	staticData.once.Do(tsparser_ruleslexerLexerInit)
}

// NewTSParser_rulesLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewTSParser_rulesLexer(input antlr.CharStream) *TSParser_rulesLexer {
	TSParser_rulesLexerInit()
	l := new(TSParser_rulesLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &TSParser_rulesLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "TSParser_rules.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TSParser_rulesLexer tokens.
const (
	TSParser_rulesLexerT__0       = 1
	TSParser_rulesLexerT__1       = 2
	TSParser_rulesLexerT__2       = 3
	TSParser_rulesLexerT__3       = 4
	TSParser_rulesLexerT__4       = 5
	TSParser_rulesLexerT__5       = 6
	TSParser_rulesLexerT__6       = 7
	TSParser_rulesLexerT__7       = 8
	TSParser_rulesLexerNL         = 9
	TSParser_rulesLexerWS         = 10
	TSParser_rulesLexerVAR        = 11
	TSParser_rulesLexerLET        = 12
	TSParser_rulesLexerNIL        = 13
	TSParser_rulesLexerSTRING     = 14
	TSParser_rulesLexerINT        = 15
	TSParser_rulesLexerFLOAT      = 16
	TSParser_rulesLexerBOOL       = 17
	TSParser_rulesLexerCHARACTER  = 18
	TSParser_rulesLexerIF         = 19
	TSParser_rulesLexerELSE       = 20
	TSParser_rulesLexerSWITCH     = 21
	TSParser_rulesLexerDEFAULT    = 22
	TSParser_rulesLexerCASE       = 23
	TSParser_rulesLexerWHILE      = 24
	TSParser_rulesLexerIN         = 25
	TSParser_rulesLexerFOR        = 26
	TSParser_rulesLexerGUARD      = 27
	TSParser_rulesLexerCONTINUE   = 28
	TSParser_rulesLexerBREAK      = 29
	TSParser_rulesLexerRETURN     = 30
	TSParser_rulesLexerSTRUCT     = 31
	TSParser_rulesLexerSELF       = 32
	TSParser_rulesLexerMUTATING   = 33
	TSParser_rulesLexerFUNC       = 34
	TSParser_rulesLexerINOUT      = 35
	TSParser_rulesLexerVBOOL      = 36
	TSParser_rulesLexerVSTRING    = 37
	TSParser_rulesLexerVFLOAT     = 38
	TSParser_rulesLexerVINTEGER   = 39
	TSParser_rulesLexerID         = 40
	TSParser_rulesLexerSL_COMMENT = 41
	TSParser_rulesLexerML_COMMENT = 42
)
