// Code generated from TSParser_rules.g4 by ANTLR 4.13.1. DO NOT EDIT.

package TSVisitor

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type TSParser_rulesLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var TSParser_rulesLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func tsparser_ruleslexerLexerInit() {
	staticData := &TSParser_rulesLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'-'", "'!'", "'%'", "'*'", "'/'", "'+'", "'=='", "'!='", "'>'",
		"'<'", "'>='", "'<='", "'('", "')'", "'&&'", "'||'", "'='", "'+='",
		"'-='", "':'", "'?'", "'{'", "'}'", "'..'", "','", "'->'", "'_'", "'&'",
		"", "", "'var'", "'let'", "'nil'", "'String'", "'Int'", "'Float'", "'Bool'",
		"'Character'", "'if'", "'else'", "'switch'", "'default'", "'case'",
		"'while'", "'in'", "'for'", "'guard'", "'continue'", "'break'", "'return'",
		"'print'", "'struct'", "'self'", "'mutating'", "'func'", "'inout'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "NL", "WS", "VAR", "LET",
		"NIL", "STRING", "INT", "FLOAT", "BOOL", "CHARACTER", "IF", "ELSE",
		"SWITCH", "DEFAULT", "CASE", "WHILE", "IN", "FOR", "GUARD", "CONTINUE",
		"BREAK", "RETURN", "PRINT", "STRUCT", "SELF", "MUTATING", "FUNC", "INOUT",
		"VBOOL", "VSTRING", "VFLOAT", "VINTEGER", "ID", "SL_COMMENT", "ML_COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "NL", "WS", "VAR", "LET", "NIL", "STRING",
		"INT", "FLOAT", "BOOL", "CHARACTER", "IF", "ELSE", "SWITCH", "DEFAULT",
		"CASE", "WHILE", "IN", "FOR", "GUARD", "CONTINUE", "BREAK", "RETURN",
		"PRINT", "STRUCT", "SELF", "MUTATING", "FUNC", "INOUT", "DIGIT", "VBOOL",
		"VSTRING", "VFLOAT", "VINTEGER", "ID", "SL_COMMENT", "ML_COMMENT", "ESC",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 63, 445, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1,
		3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1,
		8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16,
		1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1,
		21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25,
		1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 3, 28, 199, 8, 28, 1, 28, 1,
		28, 1, 28, 1, 28, 1, 29, 4, 29, 206, 8, 29, 11, 29, 12, 29, 207, 1, 29,
		1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1,
		32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1,
		36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37,
		1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1,
		39, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41,
		1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1,
		43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45,
		1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1,
		47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 48,
		1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1,
		50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51,
		1, 51, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1,
		53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 55,
		1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1,
		57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 3, 57, 374, 8, 57, 1, 58, 1, 58,
		1, 58, 5, 58, 379, 8, 58, 10, 58, 12, 58, 382, 9, 58, 1, 58, 1, 58, 1,
		59, 4, 59, 387, 8, 59, 11, 59, 12, 59, 388, 1, 59, 1, 59, 4, 59, 393, 8,
		59, 11, 59, 12, 59, 394, 1, 60, 4, 60, 398, 8, 60, 11, 60, 12, 60, 399,
		1, 61, 1, 61, 5, 61, 404, 8, 61, 10, 61, 12, 61, 407, 9, 61, 1, 62, 1,
		62, 1, 62, 1, 62, 5, 62, 413, 8, 62, 10, 62, 12, 62, 416, 9, 62, 1, 62,
		5, 62, 419, 8, 62, 10, 62, 12, 62, 422, 9, 62, 1, 62, 1, 62, 1, 63, 1,
		63, 1, 63, 1, 63, 5, 63, 430, 8, 63, 10, 63, 12, 63, 433, 9, 63, 1, 63,
		1, 63, 1, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1, 64, 1, 64, 3, 64, 444, 8,
		64, 3, 380, 414, 431, 0, 65, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7,
		15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33,
		17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51,
		26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69,
		35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87,
		44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105,
		53, 107, 54, 109, 55, 111, 56, 113, 0, 115, 57, 117, 58, 119, 59, 121,
		60, 123, 61, 125, 62, 127, 63, 129, 0, 1, 0, 5, 2, 0, 9, 9, 32, 32, 1,
		0, 48, 57, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95,
		97, 122, 2, 0, 10, 10, 13, 13, 455, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0,
		0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0,
		0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0,
		0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0,
		0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1,
		0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43,
		1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0,
		51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0,
		0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0,
		0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0,
		0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1,
		0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89,
		1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0,
		97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0,
		0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111,
		1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119, 1, 0, 0, 0,
		0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0, 0, 127, 1,
		0, 0, 0, 1, 131, 1, 0, 0, 0, 3, 133, 1, 0, 0, 0, 5, 135, 1, 0, 0, 0, 7,
		137, 1, 0, 0, 0, 9, 139, 1, 0, 0, 0, 11, 141, 1, 0, 0, 0, 13, 143, 1, 0,
		0, 0, 15, 146, 1, 0, 0, 0, 17, 149, 1, 0, 0, 0, 19, 151, 1, 0, 0, 0, 21,
		153, 1, 0, 0, 0, 23, 156, 1, 0, 0, 0, 25, 159, 1, 0, 0, 0, 27, 161, 1,
		0, 0, 0, 29, 163, 1, 0, 0, 0, 31, 166, 1, 0, 0, 0, 33, 169, 1, 0, 0, 0,
		35, 171, 1, 0, 0, 0, 37, 174, 1, 0, 0, 0, 39, 177, 1, 0, 0, 0, 41, 179,
		1, 0, 0, 0, 43, 181, 1, 0, 0, 0, 45, 183, 1, 0, 0, 0, 47, 185, 1, 0, 0,
		0, 49, 188, 1, 0, 0, 0, 51, 190, 1, 0, 0, 0, 53, 193, 1, 0, 0, 0, 55, 195,
		1, 0, 0, 0, 57, 198, 1, 0, 0, 0, 59, 205, 1, 0, 0, 0, 61, 211, 1, 0, 0,
		0, 63, 215, 1, 0, 0, 0, 65, 219, 1, 0, 0, 0, 67, 223, 1, 0, 0, 0, 69, 230,
		1, 0, 0, 0, 71, 234, 1, 0, 0, 0, 73, 240, 1, 0, 0, 0, 75, 245, 1, 0, 0,
		0, 77, 255, 1, 0, 0, 0, 79, 258, 1, 0, 0, 0, 81, 263, 1, 0, 0, 0, 83, 270,
		1, 0, 0, 0, 85, 278, 1, 0, 0, 0, 87, 283, 1, 0, 0, 0, 89, 289, 1, 0, 0,
		0, 91, 292, 1, 0, 0, 0, 93, 296, 1, 0, 0, 0, 95, 302, 1, 0, 0, 0, 97, 311,
		1, 0, 0, 0, 99, 317, 1, 0, 0, 0, 101, 324, 1, 0, 0, 0, 103, 330, 1, 0,
		0, 0, 105, 337, 1, 0, 0, 0, 107, 342, 1, 0, 0, 0, 109, 351, 1, 0, 0, 0,
		111, 356, 1, 0, 0, 0, 113, 362, 1, 0, 0, 0, 115, 373, 1, 0, 0, 0, 117,
		375, 1, 0, 0, 0, 119, 386, 1, 0, 0, 0, 121, 397, 1, 0, 0, 0, 123, 401,
		1, 0, 0, 0, 125, 408, 1, 0, 0, 0, 127, 425, 1, 0, 0, 0, 129, 443, 1, 0,
		0, 0, 131, 132, 5, 45, 0, 0, 132, 2, 1, 0, 0, 0, 133, 134, 5, 33, 0, 0,
		134, 4, 1, 0, 0, 0, 135, 136, 5, 37, 0, 0, 136, 6, 1, 0, 0, 0, 137, 138,
		5, 42, 0, 0, 138, 8, 1, 0, 0, 0, 139, 140, 5, 47, 0, 0, 140, 10, 1, 0,
		0, 0, 141, 142, 5, 43, 0, 0, 142, 12, 1, 0, 0, 0, 143, 144, 5, 61, 0, 0,
		144, 145, 5, 61, 0, 0, 145, 14, 1, 0, 0, 0, 146, 147, 5, 33, 0, 0, 147,
		148, 5, 61, 0, 0, 148, 16, 1, 0, 0, 0, 149, 150, 5, 62, 0, 0, 150, 18,
		1, 0, 0, 0, 151, 152, 5, 60, 0, 0, 152, 20, 1, 0, 0, 0, 153, 154, 5, 62,
		0, 0, 154, 155, 5, 61, 0, 0, 155, 22, 1, 0, 0, 0, 156, 157, 5, 60, 0, 0,
		157, 158, 5, 61, 0, 0, 158, 24, 1, 0, 0, 0, 159, 160, 5, 40, 0, 0, 160,
		26, 1, 0, 0, 0, 161, 162, 5, 41, 0, 0, 162, 28, 1, 0, 0, 0, 163, 164, 5,
		38, 0, 0, 164, 165, 5, 38, 0, 0, 165, 30, 1, 0, 0, 0, 166, 167, 5, 124,
		0, 0, 167, 168, 5, 124, 0, 0, 168, 32, 1, 0, 0, 0, 169, 170, 5, 61, 0,
		0, 170, 34, 1, 0, 0, 0, 171, 172, 5, 43, 0, 0, 172, 173, 5, 61, 0, 0, 173,
		36, 1, 0, 0, 0, 174, 175, 5, 45, 0, 0, 175, 176, 5, 61, 0, 0, 176, 38,
		1, 0, 0, 0, 177, 178, 5, 58, 0, 0, 178, 40, 1, 0, 0, 0, 179, 180, 5, 63,
		0, 0, 180, 42, 1, 0, 0, 0, 181, 182, 5, 123, 0, 0, 182, 44, 1, 0, 0, 0,
		183, 184, 5, 125, 0, 0, 184, 46, 1, 0, 0, 0, 185, 186, 5, 46, 0, 0, 186,
		187, 5, 46, 0, 0, 187, 48, 1, 0, 0, 0, 188, 189, 5, 44, 0, 0, 189, 50,
		1, 0, 0, 0, 190, 191, 5, 45, 0, 0, 191, 192, 5, 62, 0, 0, 192, 52, 1, 0,
		0, 0, 193, 194, 5, 95, 0, 0, 194, 54, 1, 0, 0, 0, 195, 196, 5, 38, 0, 0,
		196, 56, 1, 0, 0, 0, 197, 199, 5, 13, 0, 0, 198, 197, 1, 0, 0, 0, 198,
		199, 1, 0, 0, 0, 199, 200, 1, 0, 0, 0, 200, 201, 5, 10, 0, 0, 201, 202,
		1, 0, 0, 0, 202, 203, 6, 28, 0, 0, 203, 58, 1, 0, 0, 0, 204, 206, 7, 0,
		0, 0, 205, 204, 1, 0, 0, 0, 206, 207, 1, 0, 0, 0, 207, 205, 1, 0, 0, 0,
		207, 208, 1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209, 210, 6, 29, 0, 0, 210,
		60, 1, 0, 0, 0, 211, 212, 5, 118, 0, 0, 212, 213, 5, 97, 0, 0, 213, 214,
		5, 114, 0, 0, 214, 62, 1, 0, 0, 0, 215, 216, 5, 108, 0, 0, 216, 217, 5,
		101, 0, 0, 217, 218, 5, 116, 0, 0, 218, 64, 1, 0, 0, 0, 219, 220, 5, 110,
		0, 0, 220, 221, 5, 105, 0, 0, 221, 222, 5, 108, 0, 0, 222, 66, 1, 0, 0,
		0, 223, 224, 5, 83, 0, 0, 224, 225, 5, 116, 0, 0, 225, 226, 5, 114, 0,
		0, 226, 227, 5, 105, 0, 0, 227, 228, 5, 110, 0, 0, 228, 229, 5, 103, 0,
		0, 229, 68, 1, 0, 0, 0, 230, 231, 5, 73, 0, 0, 231, 232, 5, 110, 0, 0,
		232, 233, 5, 116, 0, 0, 233, 70, 1, 0, 0, 0, 234, 235, 5, 70, 0, 0, 235,
		236, 5, 108, 0, 0, 236, 237, 5, 111, 0, 0, 237, 238, 5, 97, 0, 0, 238,
		239, 5, 116, 0, 0, 239, 72, 1, 0, 0, 0, 240, 241, 5, 66, 0, 0, 241, 242,
		5, 111, 0, 0, 242, 243, 5, 111, 0, 0, 243, 244, 5, 108, 0, 0, 244, 74,
		1, 0, 0, 0, 245, 246, 5, 67, 0, 0, 246, 247, 5, 104, 0, 0, 247, 248, 5,
		97, 0, 0, 248, 249, 5, 114, 0, 0, 249, 250, 5, 97, 0, 0, 250, 251, 5, 99,
		0, 0, 251, 252, 5, 116, 0, 0, 252, 253, 5, 101, 0, 0, 253, 254, 5, 114,
		0, 0, 254, 76, 1, 0, 0, 0, 255, 256, 5, 105, 0, 0, 256, 257, 5, 102, 0,
		0, 257, 78, 1, 0, 0, 0, 258, 259, 5, 101, 0, 0, 259, 260, 5, 108, 0, 0,
		260, 261, 5, 115, 0, 0, 261, 262, 5, 101, 0, 0, 262, 80, 1, 0, 0, 0, 263,
		264, 5, 115, 0, 0, 264, 265, 5, 119, 0, 0, 265, 266, 5, 105, 0, 0, 266,
		267, 5, 116, 0, 0, 267, 268, 5, 99, 0, 0, 268, 269, 5, 104, 0, 0, 269,
		82, 1, 0, 0, 0, 270, 271, 5, 100, 0, 0, 271, 272, 5, 101, 0, 0, 272, 273,
		5, 102, 0, 0, 273, 274, 5, 97, 0, 0, 274, 275, 5, 117, 0, 0, 275, 276,
		5, 108, 0, 0, 276, 277, 5, 116, 0, 0, 277, 84, 1, 0, 0, 0, 278, 279, 5,
		99, 0, 0, 279, 280, 5, 97, 0, 0, 280, 281, 5, 115, 0, 0, 281, 282, 5, 101,
		0, 0, 282, 86, 1, 0, 0, 0, 283, 284, 5, 119, 0, 0, 284, 285, 5, 104, 0,
		0, 285, 286, 5, 105, 0, 0, 286, 287, 5, 108, 0, 0, 287, 288, 5, 101, 0,
		0, 288, 88, 1, 0, 0, 0, 289, 290, 5, 105, 0, 0, 290, 291, 5, 110, 0, 0,
		291, 90, 1, 0, 0, 0, 292, 293, 5, 102, 0, 0, 293, 294, 5, 111, 0, 0, 294,
		295, 5, 114, 0, 0, 295, 92, 1, 0, 0, 0, 296, 297, 5, 103, 0, 0, 297, 298,
		5, 117, 0, 0, 298, 299, 5, 97, 0, 0, 299, 300, 5, 114, 0, 0, 300, 301,
		5, 100, 0, 0, 301, 94, 1, 0, 0, 0, 302, 303, 5, 99, 0, 0, 303, 304, 5,
		111, 0, 0, 304, 305, 5, 110, 0, 0, 305, 306, 5, 116, 0, 0, 306, 307, 5,
		105, 0, 0, 307, 308, 5, 110, 0, 0, 308, 309, 5, 117, 0, 0, 309, 310, 5,
		101, 0, 0, 310, 96, 1, 0, 0, 0, 311, 312, 5, 98, 0, 0, 312, 313, 5, 114,
		0, 0, 313, 314, 5, 101, 0, 0, 314, 315, 5, 97, 0, 0, 315, 316, 5, 107,
		0, 0, 316, 98, 1, 0, 0, 0, 317, 318, 5, 114, 0, 0, 318, 319, 5, 101, 0,
		0, 319, 320, 5, 116, 0, 0, 320, 321, 5, 117, 0, 0, 321, 322, 5, 114, 0,
		0, 322, 323, 5, 110, 0, 0, 323, 100, 1, 0, 0, 0, 324, 325, 5, 112, 0, 0,
		325, 326, 5, 114, 0, 0, 326, 327, 5, 105, 0, 0, 327, 328, 5, 110, 0, 0,
		328, 329, 5, 116, 0, 0, 329, 102, 1, 0, 0, 0, 330, 331, 5, 115, 0, 0, 331,
		332, 5, 116, 0, 0, 332, 333, 5, 114, 0, 0, 333, 334, 5, 117, 0, 0, 334,
		335, 5, 99, 0, 0, 335, 336, 5, 116, 0, 0, 336, 104, 1, 0, 0, 0, 337, 338,
		5, 115, 0, 0, 338, 339, 5, 101, 0, 0, 339, 340, 5, 108, 0, 0, 340, 341,
		5, 102, 0, 0, 341, 106, 1, 0, 0, 0, 342, 343, 5, 109, 0, 0, 343, 344, 5,
		117, 0, 0, 344, 345, 5, 116, 0, 0, 345, 346, 5, 97, 0, 0, 346, 347, 5,
		116, 0, 0, 347, 348, 5, 105, 0, 0, 348, 349, 5, 110, 0, 0, 349, 350, 5,
		103, 0, 0, 350, 108, 1, 0, 0, 0, 351, 352, 5, 102, 0, 0, 352, 353, 5, 117,
		0, 0, 353, 354, 5, 110, 0, 0, 354, 355, 5, 99, 0, 0, 355, 110, 1, 0, 0,
		0, 356, 357, 5, 105, 0, 0, 357, 358, 5, 110, 0, 0, 358, 359, 5, 111, 0,
		0, 359, 360, 5, 117, 0, 0, 360, 361, 5, 116, 0, 0, 361, 112, 1, 0, 0, 0,
		362, 363, 7, 1, 0, 0, 363, 114, 1, 0, 0, 0, 364, 365, 5, 116, 0, 0, 365,
		366, 5, 114, 0, 0, 366, 367, 5, 117, 0, 0, 367, 374, 5, 101, 0, 0, 368,
		369, 5, 102, 0, 0, 369, 370, 5, 97, 0, 0, 370, 371, 5, 108, 0, 0, 371,
		372, 5, 115, 0, 0, 372, 374, 5, 101, 0, 0, 373, 364, 1, 0, 0, 0, 373, 368,
		1, 0, 0, 0, 374, 116, 1, 0, 0, 0, 375, 380, 5, 34, 0, 0, 376, 379, 3, 129,
		64, 0, 377, 379, 9, 0, 0, 0, 378, 376, 1, 0, 0, 0, 378, 377, 1, 0, 0, 0,
		379, 382, 1, 0, 0, 0, 380, 381, 1, 0, 0, 0, 380, 378, 1, 0, 0, 0, 381,
		383, 1, 0, 0, 0, 382, 380, 1, 0, 0, 0, 383, 384, 5, 34, 0, 0, 384, 118,
		1, 0, 0, 0, 385, 387, 7, 1, 0, 0, 386, 385, 1, 0, 0, 0, 387, 388, 1, 0,
		0, 0, 388, 386, 1, 0, 0, 0, 388, 389, 1, 0, 0, 0, 389, 390, 1, 0, 0, 0,
		390, 392, 5, 46, 0, 0, 391, 393, 7, 1, 0, 0, 392, 391, 1, 0, 0, 0, 393,
		394, 1, 0, 0, 0, 394, 392, 1, 0, 0, 0, 394, 395, 1, 0, 0, 0, 395, 120,
		1, 0, 0, 0, 396, 398, 7, 1, 0, 0, 397, 396, 1, 0, 0, 0, 398, 399, 1, 0,
		0, 0, 399, 397, 1, 0, 0, 0, 399, 400, 1, 0, 0, 0, 400, 122, 1, 0, 0, 0,
		401, 405, 7, 2, 0, 0, 402, 404, 7, 3, 0, 0, 403, 402, 1, 0, 0, 0, 404,
		407, 1, 0, 0, 0, 405, 403, 1, 0, 0, 0, 405, 406, 1, 0, 0, 0, 406, 124,
		1, 0, 0, 0, 407, 405, 1, 0, 0, 0, 408, 409, 5, 47, 0, 0, 409, 410, 5, 47,
		0, 0, 410, 414, 1, 0, 0, 0, 411, 413, 9, 0, 0, 0, 412, 411, 1, 0, 0, 0,
		413, 416, 1, 0, 0, 0, 414, 415, 1, 0, 0, 0, 414, 412, 1, 0, 0, 0, 415,
		420, 1, 0, 0, 0, 416, 414, 1, 0, 0, 0, 417, 419, 8, 4, 0, 0, 418, 417,
		1, 0, 0, 0, 419, 422, 1, 0, 0, 0, 420, 418, 1, 0, 0, 0, 420, 421, 1, 0,
		0, 0, 421, 423, 1, 0, 0, 0, 422, 420, 1, 0, 0, 0, 423, 424, 6, 62, 0, 0,
		424, 126, 1, 0, 0, 0, 425, 426, 5, 47, 0, 0, 426, 427, 5, 42, 0, 0, 427,
		431, 1, 0, 0, 0, 428, 430, 9, 0, 0, 0, 429, 428, 1, 0, 0, 0, 430, 433,
		1, 0, 0, 0, 431, 432, 1, 0, 0, 0, 431, 429, 1, 0, 0, 0, 432, 434, 1, 0,
		0, 0, 433, 431, 1, 0, 0, 0, 434, 435, 5, 42, 0, 0, 435, 436, 5, 47, 0,
		0, 436, 437, 1, 0, 0, 0, 437, 438, 6, 63, 0, 0, 438, 128, 1, 0, 0, 0, 439,
		440, 5, 92, 0, 0, 440, 444, 5, 34, 0, 0, 441, 442, 5, 92, 0, 0, 442, 444,
		5, 92, 0, 0, 443, 439, 1, 0, 0, 0, 443, 441, 1, 0, 0, 0, 444, 130, 1, 0,
		0, 0, 14, 0, 198, 207, 373, 378, 380, 388, 394, 399, 405, 414, 420, 431,
		443, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// TSParser_rulesLexerInit initializes any static state used to implement TSParser_rulesLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewTSParser_rulesLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func TSParser_rulesLexerInit() {
	staticData := &TSParser_rulesLexerLexerStaticData
	staticData.once.Do(tsparser_ruleslexerLexerInit)
}

// NewTSParser_rulesLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewTSParser_rulesLexer(input antlr.CharStream) *TSParser_rulesLexer {
	TSParser_rulesLexerInit()
	l := new(TSParser_rulesLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &TSParser_rulesLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "TSParser_rules.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TSParser_rulesLexer tokens.
const (
	TSParser_rulesLexerT__0       = 1
	TSParser_rulesLexerT__1       = 2
	TSParser_rulesLexerT__2       = 3
	TSParser_rulesLexerT__3       = 4
	TSParser_rulesLexerT__4       = 5
	TSParser_rulesLexerT__5       = 6
	TSParser_rulesLexerT__6       = 7
	TSParser_rulesLexerT__7       = 8
	TSParser_rulesLexerT__8       = 9
	TSParser_rulesLexerT__9       = 10
	TSParser_rulesLexerT__10      = 11
	TSParser_rulesLexerT__11      = 12
	TSParser_rulesLexerT__12      = 13
	TSParser_rulesLexerT__13      = 14
	TSParser_rulesLexerT__14      = 15
	TSParser_rulesLexerT__15      = 16
	TSParser_rulesLexerT__16      = 17
	TSParser_rulesLexerT__17      = 18
	TSParser_rulesLexerT__18      = 19
	TSParser_rulesLexerT__19      = 20
	TSParser_rulesLexerT__20      = 21
	TSParser_rulesLexerT__21      = 22
	TSParser_rulesLexerT__22      = 23
	TSParser_rulesLexerT__23      = 24
	TSParser_rulesLexerT__24      = 25
	TSParser_rulesLexerT__25      = 26
	TSParser_rulesLexerT__26      = 27
	TSParser_rulesLexerT__27      = 28
	TSParser_rulesLexerNL         = 29
	TSParser_rulesLexerWS         = 30
	TSParser_rulesLexerVAR        = 31
	TSParser_rulesLexerLET        = 32
	TSParser_rulesLexerNIL        = 33
	TSParser_rulesLexerSTRING     = 34
	TSParser_rulesLexerINT        = 35
	TSParser_rulesLexerFLOAT      = 36
	TSParser_rulesLexerBOOL       = 37
	TSParser_rulesLexerCHARACTER  = 38
	TSParser_rulesLexerIF         = 39
	TSParser_rulesLexerELSE       = 40
	TSParser_rulesLexerSWITCH     = 41
	TSParser_rulesLexerDEFAULT    = 42
	TSParser_rulesLexerCASE       = 43
	TSParser_rulesLexerWHILE      = 44
	TSParser_rulesLexerIN         = 45
	TSParser_rulesLexerFOR        = 46
	TSParser_rulesLexerGUARD      = 47
	TSParser_rulesLexerCONTINUE   = 48
	TSParser_rulesLexerBREAK      = 49
	TSParser_rulesLexerRETURN     = 50
	TSParser_rulesLexerPRINT      = 51
	TSParser_rulesLexerSTRUCT     = 52
	TSParser_rulesLexerSELF       = 53
	TSParser_rulesLexerMUTATING   = 54
	TSParser_rulesLexerFUNC       = 55
	TSParser_rulesLexerINOUT      = 56
	TSParser_rulesLexerVBOOL      = 57
	TSParser_rulesLexerVSTRING    = 58
	TSParser_rulesLexerVFLOAT     = 59
	TSParser_rulesLexerVINTEGER   = 60
	TSParser_rulesLexerID         = 61
	TSParser_rulesLexerSL_COMMENT = 62
	TSParser_rulesLexerML_COMMENT = 63
)
